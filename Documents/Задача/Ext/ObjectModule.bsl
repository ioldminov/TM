
Процедура _ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи) Экспорт
	
	ТекущийОбъект.ХЗ_Подробности = Новый ХранилищеЗначения(ЭтаФорма.ФД_Подробности);
	ТекущийОбъект.Подробности = ЭтаФорма.ФД_Подробности.ПолучитьТекст();

	ТекущийОбъект.ХЗ_ОписаниеРешения = Новый ХранилищеЗначения(ЭтаФорма.ФД_ОписаниеРешения);
	ТекущийОбъект.ОписаниеРешения = ЭтаФорма.ФД_ОписаниеРешения.ПолучитьТекст();

	Если Ссылка.Пустая() Тогда
		ТекущийОбъект.ДатаИзменения = ТекущийОбъект.Дата;
	Иначе
		ТекущийОбъект.ДатаИзменения = ТекущаяДата();
	КонецЕсли;
	
	Если ТекущийОбъект.СостояниеЗадачи = Справочники.СостоянияЗадач.Закрыта И Не ЗначениеЗаполнено(ТекущийОбъект.ДатаЗакрытия) Тогда 
		ТекущийОбъект.ДатаЗакрытия = ТекущаяДата();
	КонецЕсли;
	
КонецПроцедуры

Процедура _ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект) Экспорт
	
	ЭтаФорма.ФД_Подробности = ТекущийОбъект.ХЗ_Подробности.Получить();
	Если ПустаяСтрока(ЭтаФорма.ФД_Подробности.ПолучитьТекст()) И Не ПустаяСтрока(ТекущийОбъект.Подробности) Тогда
		_ВремСтр = СтрЗаменить(ТекущийОбъект.Подробности, "
		|", "<BR>");
		_ВремСтр = СтрЗаменить(_ВремСтр, " ", "&nbsp;");
		ЭтаФорма.ФД_Подробности.УстановитьHTML(_ВремСтр, Новый Структура);
	КонецЕсли;

	ЭтаФорма.ФД_ОписаниеРешения = ТекущийОбъект.ХЗ_ОписаниеРешения.Получить();
	Если ПустаяСтрока(ЭтаФорма.ФД_ОписаниеРешения.ПолучитьТекст()) И Не ПустаяСтрока(ТекущийОбъект.ОписаниеРешения) Тогда
		_ВремСтр = СтрЗаменить(ТекущийОбъект.ОписаниеРешения, "
		|", "<BR>");
		_ВремСтр = СтрЗаменить(_ВремСтр, " ", "&nbsp;");
		ЭтаФорма.ФД_ОписаниеРешения.УстановитьHTML(_ВремСтр, Новый Структура);
	КонецЕсли;

КонецПроцедуры

Процедура _ЗаписатьПриложение(АдресВХранилище, ВыбранноеИмяФайла) Экспорт
	
	ЗВХ = ПолучитьИзВременногоХранилища(АдресВХранилище);
	НовСтр = Приложения.Добавить();
	НовСтр.ХЗ = Новый ХранилищеЗначения(ЗВХ);
	ОчищенноеИмяФайла = ВыбранноеИмяФайла;
	Поз = 10;
	Пока Поз > 0 Цикл
		Поз1 = Найти(ОчищенноеИмяФайла, "\");
		Поз2 = Найти(ОчищенноеИмяФайла, "/");
		Поз = Макс(Поз1, Поз2);
		Если Поз > 0 Тогда
			ОчищенноеИмяФайла = Прав(ОчищенноеИмяФайла, СтрДлина(ОчищенноеИмяФайла) - Поз);
		КонецЕсли;
	КонецЦикла;
	НовСтр.ИмяФайла = ОчищенноеИмяФайла;
	НовСтр.Добавлен = ТекущаяДата();
	НовСтр.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	НовСтр.Размер = ЗВХ.Размер() / 1024;
	
	Записать();
	
КонецПроцедуры

Процедура _ПрочитатьПриложение(НомерСтроки, АдресВХранилище, УИД) Экспорт
	
	АдресВХранилище = ПоместитьВоВременноеХранилище(Приложения[НомерСтроки].ХЗ.Получить(), УИД);
	
КонецПроцедуры

Процедура ПроверитьКорректностьНаСервере(ЭтаФорма, ТекущийОбъект, Отказ, МассивСообщений) Экспорт
	
	Если ТекущийОбъект.СостояниеЗадачи = Справочники.СостоянияЗадач.Закрыта И Не ЗначениеЗаполнено(ТекущийОбъект.РелизКонфигурации) И ТекущийОбъект.ТипЗадачи.НеобходимоУказаниеРелиза Тогда 
		МассивСообщений.Добавить(Новый Структура("ТекстСообщения, Поле", "Не указано значение поля <Релиз конфигурации>. Данный тип задачи требует указание релиза!", "Объект.РелизКонфигурации"));
		Отказ = Истина;
	КонецЕсли;
	
	Если ТекущийОбъект.СостояниеЗадачи = Справочники.СостоянияЗадач.Закрыта Тогда 
		Если ТекущийОбъект.ВключатьВОписаниеПоставки = Истина Тогда 
			мОписаниеРешенияПустое = ПустаяСтрока(СокрЛП(ЭтаФорма.ФД_ОписаниеРешения.ПолучитьТекст()));
			Если мОписаниеРешенияПустое Тогда 
				МассивСообщений.Добавить(Новый Структура("ТекстСообщения, Поле", "Не указано значение поля <Описание решения>", "ФД_ОписаниеРешения"));
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура _ЗаблокироватьОбъект(ЭтаФорма, ТекущийОбъект, тОписаниеОшибки) Экспорт 
	
	Если НЕ ЭтоНовый() тогда
		Попытка
			ЗаблокироватьДанныеДляРедактирования(ЭтотОбъект.Ссылка, ЭтотОбъект.ВерсияДанных, ЭтаФорма.УникальныйИдентификатор);
		Исключение
			ЭтаФорма.ТолькоПросмотр = Истина;
			тОписаниеОшибки = ОписаниеОшибки();
		КонецПопытки;
	КонецЕсли;	
	
КонецПроцедуры

Процедура _РазблокироватьОбъект(ЭтаФорма, ТекущийОбъект) Экспорт 
	
	Если НЕ ЭтоНовый() тогда
		Попытка
			РазблокироватьДанныеДляРедактирования(ЭтотОбъект.Ссылка, ЭтаФорма.УникальныйИдентификатор);
		Исключение
			тОписаниеОшибки = ОписаниеОшибки();
		КонецПопытки;
	КонецЕсли;	
	
КонецПроцедуры

Функция ПолучитьПредставлениеИзмененийОбъекта() Экспорт
	
	ПредставлениеИзменений = "";
	Для Каждого ТекРеквизит Из ЭтотОбъект.Метаданные().Реквизиты Цикл
		
		Если ТекРеквизит.Имя = "ДатаИзменения" ИЛИ
			ТипЗнч(ЭтотОбъект[ТекРеквизит.Имя]) = Тип("ХранилищеЗначения") Тогда
			Продолжить;
		КонецЕсли;
		
		Если Ссылка[ТекРеквизит.Имя] <> ЭтотОбъект[ТекРеквизит.Имя] Тогда 
			ПредставлениеИзменений = ПредставлениеИзменений + ТекРеквизит.Синоним + ": " + Ссылка[ТекРеквизит.Имя] + " -> " + ЭтотОбъект[ТекРеквизит.Имя] + Символы.ПС;
		КонецЕсли;
	КонецЦикла;
	
	Если Не ПустаяСтрока(ПредставлениеИзменений) Тогда 
		ПредставлениеИзменений = "ИЗМЕНЕНИЯ:" + Символы.ПС + ПредставлениеИзменений;
	КонецЕсли;
	
	Возврат ПредставлениеИзменений;
	
КонецФункции

Процедура ДобавитьПользователяВОтслеживающие() Экспорт
	
	
КонецПроцедуры

Функция ПолучитьТекущееСостояниеЗадачи()
	
	ТекущееСостояниеЗадачи = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсторияСостоянийЗадачСрезПоследних.Состояние
	|ИЗ
	|	РегистрСведений.ИсторияСостоянийЗадач.СрезПоследних(, Задача = &Задача) КАК ИсторияСостоянийЗадачСрезПоследних";
	
	Запрос.УстановитьПараметр("Задача", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда 
		ТекущееСостояниеЗадачи = Выборка.Состояние;
	КонецЕсли;
	
	Возврат ТекущееСостояниеЗадачи;
	
КонецФункции

Процедура ЗаписатьСостояниеЗадачи() Экспорт 
	
	ТекущееСостояниеЗадачи = ПолучитьТекущееСостояниеЗадачи();
	
	Если ТекущееСостояниеЗадачи <> СостояниеЗадачи Тогда 
		
		МенеджерЗаписи = РегистрыСведений.ИсторияСостоянийЗадач.СоздатьМенеджерЗаписи();
		
		МенеджерЗаписи.Период 			= ТекущаяДата();
		МенеджерЗаписи.Задача 			= Ссылка;
		МенеджерЗаписи.Состояние		=  СостояниеЗадачи;
		
		МенеджерЗаписи.Пользователь 	= ПараметрыСеанса.ТекущийПользователь;
		
		МенеджерЗаписи.Записать(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

