
// Работа с приложениями
Процедура ЗаписатьПриложения (МассивПриложений, Скрытый) Экспорт
	
	Набор = РегистрыСведений.ФайлыСтатей.СоздатьНаборЗаписей();
	Набор.Отбор.Документ.Установить(Ссылка);
	Набор.Отбор.Скрытый.Установить(Скрытый);
	Набор.Прочитать();
	Набор.Очистить();

	
	Для каждого Стр Из МассивПриложений Цикл
		АдресВХранилище = Стр.Путь;
		ВыбранноеИмяФайла = Стр.Имя;
		
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВХранилище);
		//НовСтр = Вложения.Добавить();
		//НовСтр.ХЗ = Новый ХранилищеЗначения(ДвоичныеДанные);
		//
		//ОчищенноеИмяФайла = ВыбранноеИмяФайла;
		//Поз = 10;
		//Пока Поз > 0 Цикл
		//	Поз1 = Найти(ОчищенноеИмяФайла, "\");
		//	Поз2 = Найти(ОчищенноеИмяФайла, "/");
		//	Поз = Макс(Поз1, Поз2);
		//	Если Поз > 0 Тогда
		//		ОчищенноеИмяФайла = Прав(ОчищенноеИмяФайла, СтрДлина(ОчищенноеИмяФайла) - Поз);
		//	КонецЕсли;
		//КонецЦикла;
		//
		//НовСтр.ИмяФайла = ОчищенноеИмяФайла;
		//НовСтр.ТипФайла = "";
		//НовСтр.Добавлен = ТекущаяДата();
		//НовСтр.Пользователь = ПараметрыСеанса.ТекущийПользователь;
		//НовСтр.Размер = ДвоичныеДанные.Размер() / 1024;
		
		ЗаписьФС = Набор.Добавить();
		ЗаписьФС.Документ = Ссылка;
		ЗаписьФС.ХЗ = Новый ХранилищеЗначения(ДвоичныеДанные);
		ЗаписьФС.ИмяФайла = ВыбранноеИмяФайла;
		ЗаписьФС.Скрытый = Скрытый;
		ЗаписьФС.Добавлен = ТекущаяДата();
		ЗаписьФС.Пользователь = ПараметрыСеанса.ТекущийПользователь;
		ЗаписьФС.Размер = ДвоичныеДанные.Размер() / 1024;
		
	КонецЦикла; 	
	
	Набор.Записать();	
	
КонецПроцедуры

Процедура ЗаписатьПриложение (ВыбранноеИмяФайла, АдресВХранилище) Экспорт
	
	ЗаписьФС = РегистрыСведений.ФайлыСтатей.СоздатьМенеджерЗаписи();
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВХранилище);
	ОчищенноеИмяФайла = ВыбранноеИмяФайла;
	Поз = 10;
	Пока Поз > 0 Цикл
		Поз1 = Найти(ОчищенноеИмяФайла, "\");
		Поз2 = Найти(ОчищенноеИмяФайла, "/");
		Поз = Макс(Поз1, Поз2);
		Если Поз > 0 Тогда
			ОчищенноеИмяФайла = Прав(ОчищенноеИмяФайла, СтрДлина(ОчищенноеИмяФайла) - Поз);
		КонецЕсли;
	КонецЦикла;

	ЗаписьФС.Документ = Ссылка;
	ЗаписьФС.ХЗ = Новый ХранилищеЗначения(ДвоичныеДанные);
	ЗаписьФС.ИмяФайла = ОчищенноеИмяФайла;
	ЗаписьФС.Скрытый = Ложь;
	ЗаписьФС.Добавлен = ТекущаяДата();
	ЗаписьФС.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	ЗаписьФС.Размер = ДвоичныеДанные.Размер() / 1024;
	
	ЗаписьФС.Записать();	
	
КонецПроцедуры

Функция ПрочитатьПриложения(УИД) Экспорт
		
	Струк = Новый Структура("Приложения, ПрикрепленныеКартинки", Новый Массив, Новый Массив);
	
	Если ЗначениеЗаполнено(Ссылка) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФайлыСтатей.Документ,
		|	ФайлыСтатей.ИмяФайла,
		|	ФайлыСтатей.Скрытый,
		|	ФайлыСтатей.Добавлен,
		|	ФайлыСтатей.Пользователь,
		|	ФайлыСтатей.Размер,
		|	ФайлыСтатей.ХЗ
		|ИЗ
		|	РегистрСведений.ФайлыСтатей КАК ФайлыСтатей
		|ГДЕ
		|	ФайлыСтатей.Документ = &Документ";
		
		Запрос.УстановитьПараметр("Документ", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.Скрытый = Истина Тогда
				АдресВХранилище = ПоместитьВоВременноеХранилище(ВыборкаДетальныеЗаписи.ХЗ.Получить(), УИД);
				//КаталогВременныхФайлов() + "МенеджерБТИ\" + 
				ИмяФайла = ВыборкаДетальныеЗаписи.ИмяФайла;
				Струк.ПрикрепленныеКартинки.Добавить(Новый ОписаниеПередаваемогоФайла(ИмяФайла, АдресВХранилище)); 	
			Иначе
				Струк.Приложения.Добавить(Новый Структура("ИмяФайла",ИмяФайла));
			КонецЕсли; 
 
		КонецЦикла; 
	КонецЕсли; 	
	
	Возврат Струк;
	
КонецФункции

Функция ПрочитатьПриложение(Струк, УИД) Экспорт
	
	АдресВХранилище = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФайлыСтатей.Документ,
		|	ФайлыСтатей.ИмяФайла,
		|	ФайлыСтатей.Скрытый,
		|	ФайлыСтатей.Пользователь,
		|	ФайлыСтатей.Добавлен,
		|	ФайлыСтатей.Размер,
		|	ФайлыСтатей.ХЗ
		|ИЗ
		|	РегистрСведений.ФайлыСтатей КАК ФайлыСтатей
		|ГДЕ
		|	ФайлыСтатей.Документ = &Документ
		|	И ФайлыСтатей.ИмяФайла = &ИмяФайла";
	
	Запрос.УстановитьПараметр("Документ", Струк.Документ);
	Запрос.УстановитьПараметр("ИмяФайла", Струк.ИмяФайла);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		АдресВХранилище = ПоместитьВоВременноеХранилище(Выборка.ХЗ.Получить(), УИД);
	КонецЕсли;
	
	Возврат АдресВХранилище;
	
КонецФункции

//
Процедура ПриЗаписи(Отказ)
	Если Не Отказ Тогда
		
		// Сравним изменения
		ДвижениеНеобходимо = Истина;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсторияСтатейСрезПоследних.Период,
		|	ИсторияСтатейСрезПоследних.Наименование,
		|	ИсторияСтатейСрезПоследних.Документ,
		|	ИсторияСтатейСрезПоследних.Каталог,
		|	ИсторияСтатейСрезПоследних.ТекстHTML,
		|	ИсторияСтатейСрезПоследних.Автор
		|ИЗ
		|	РегистрСведений.ИсторияСтатей.СрезПоследних(&Период, ) КАК ИсторияСтатейСрезПоследних
		|ГДЕ
		|	ИсторияСтатейСрезПоследних.Документ = &Документ";
		
		Запрос.УстановитьПараметр("Период", Дата);
		Запрос.УстановитьПараметр("Документ", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Если Выборка.Следующий() Тогда
			Если Выборка.Наименование = Наименование и 
				Выборка.Каталог = Каталог и
				Выборка.ТекстHTML = ТекстHTML Тогда
				
				ДвижениеНеобходимо = Ложь;
				
			КонецЕсли; 
		КонецЕсли;
		
		Если ДвижениеНеобходимо Тогда
			// Сделать движение в регистр истории
			ЗаписьРС = РегистрыСведений.ИсторияСтатей.СоздатьМенеджерЗаписи();
			
			ЗаписьРС.Период = Дата;
			ЗаписьРС.Каталог = Каталог;
			ЗаписьРС.Автор = Автор;
			ЗаписьРС.Наименование = Наименование;
			ЗаписьРС.Документ = Ссылка;
			ЗаписьРС.ТекстHTML = ТекстHTML;
			
			ЗаписьРС.Записать();
			
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

