
Процедура ОбрезатьТЗПланВыполненияЗадачПоДатам(ТЗПланВыполненияЗадач)
	
	мДатаНачала = НачалоДня(ДатаНачала);
	мДатаОкончания = КонецДня(ДатаОкончания);
	
	Для Каждого ТекСтрока Из ТЗПланВыполненияЗадач Цикл
		Если ТекСтрока.ДатаНачалаПлан < мДатаНачала Тогда 
			ТекСтрока.ДатаНачалаПлан = мДатаНачала;
			ТекСтрока.ОбрезанаДатаНачала = Истина;
		КонецЕсли;
		Если ТекСтрока.ДатаОкончанияПлан > мДатаОкончания Тогда 
			ТекСтрока.ДатаОкончанияПлан = мДатаОкончания;
			ТекСтрока.ОбрезанаДатаОкончания = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьИмяОбластиДня(Префикс, ИсполнительКод, ТекДата)
	
	ИмяОбластиДня = Префикс + "_" + ИсполнительКод + "_" + Формат(ТекДата, "ДФ=yyyyMMdd");
	
	Возврат ИмяОбластиДня;

КонецФункции

Функция ПолучитьЗаголовокЗадачи(НомерЗадачи, Суть)
	
	Возврат СокрЛП("(№ "+Общий.офУдалитьЛидирующиеСимволы(НомерЗадачи)+") " + Суть);	
	
КонецФункции

Функция ПолучитьНовуюСтруктуруРасшифровки(ИмяСтруктуры, Период = Неопределено, Задача = Неопределено, Исполнитель = Неопределено) Экспорт 
	
	Возврат Новый Структура("ИмяСтруктуры, Период, Задача, Исполнитель", ИмяСтруктуры, Период, Задача, Исполнитель);
		
КонецФункции


Процедура ЗаполнитьОбластьОбъединения(ИмяСтруктуры, СтруктураЗадачи, ОбластьОбъединения, ЛинияГраницыВерхНиз, ЛинияГраницыЛевая, ЛинияГраницыПравая, ЦветФона, УзорЗаливки)
	
	ОбластьОбъединения.ЦветРамки = WebЦвета.Черный;
	ОбластьОбъединения.Обвести(ЛинияГраницыЛевая, ЛинияГраницыВерхНиз, ЛинияГраницыПравая, ЛинияГраницыВерхНиз);
	ОбластьОбъединения.Объединить();
	
	ОбластьОбъединения.ЦветФона = ЦветФона;
	ОбластьОбъединения.Узор = УзорЗаливки;
	//ОбластьОбъединения.ЦветУзора = WebЦвета.ТемноСерый;
	
	Если ТипЗнч(СтруктураЗадачи.Задача) = Тип("ДокументСсылка.Задача") Тогда
		ОбластьОбъединения.Текст = ПолучитьЗаголовокЗадачи(СтруктураЗадачи.НомерЗадачи, СтруктураЗадачи.Суть);
		ОбластьОбъединения.Примечание.Текст = СтруктураЗадачи.Задача.Подробности;
	Иначе
		ОбластьОбъединения.Текст = СокрЛП("" + СтруктураЗадачи.Задача);
	КонецЕсли;
	ОбластьОбъединения.Расшифровка = ПолучитьНовуюСтруктуруРасшифровки(ИмяСтруктуры, СтруктураЗадачи.Период, СтруктураЗадачи.Задача, СтруктураЗадачи.Исполнитель);
	
КонецПроцедуры

Процедура ЗаполнитьПустуюОбласть(ИмяСтруктуры, СтруктураЗадачи, ОбластьОбъединения)
	
	//ОбластьОбъединения.ЦветРамки = WebЦвета.Черный;
	//ОбластьОбъединения.Обвести(ЛинияГраницыЛевая, ЛинияГраницыВерхНиз, ЛинияГраницыПравая, ЛинияГраницыВерхНиз);
	//ОбластьОбъединения.Объединить();
	//
	//ОбластьОбъединения.ЦветФона = ЦветФона;
	//ОбластьОбъединения.Узор = УзорЗаливки;
	////ОбластьОбъединения.ЦветУзора = WebЦвета.ТемноСерый;
	//
	//Если ТипЗнч(СтруктураЗадачи.Задача) = Тип("ДокументСсылка.Задача") Тогда
	//	ОбластьОбъединения.Текст = ПолучитьЗаголовокЗадачи(СтруктураЗадачи.НомерЗадачи, СтруктураЗадачи.Суть);
	//	ОбластьОбъединения.Примечание.Текст = СтруктураЗадачи.Задача.Подробности;
	//Иначе
	//	ОбластьОбъединения.Текст = СокрЛП("" + СтруктураЗадачи.Задача);
	//КонецЕсли;
	ОбластьОбъединения.Расшифровка = ПолучитьНовуюСтруктуруРасшифровки(ИмяСтруктуры, СтруктураЗадачи.Период, , СтруктураЗадачи.Исполнитель);
	
КонецПроцедуры

Процедура СформироватьОтчет(ИсхОбъект, ТабДок) Экспорт
	
	Если Ложь Тогда
		ТабДок = Новый ТабличныйДокумент;
	КонецЕсли;
	
	Если ИспользоватьКрупныйШрифт Тогда
		Макет = ПолучитьМакет("МакетПланаВыполненияКрупныйШрифт");
	Иначе
		Макет = ПолучитьМакет("МакетПланаВыполнения");
	КонецЕсли;
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("ОбластьЗаголовок");
	ОбластьИсполнителиШапка = Макет.ПолучитьОбласть("ОбластьШапка|ОбластьИсполнительКолонка");
	ОбластьПериодШапка = Макет.ПолучитьОбласть("ОбластьШапка|ОбластьДеньКолонка");
	ОбластьИсполнитель = Макет.ПолучитьОбласть("ОбластьДанные|ОбластьИсполнительКолонка");
	ОбластьИсполнительДень = Макет.ПолучитьОбласть("ОбластьДанные|ОбластьДеньКолонка");
	ОбластьЛегенда = Макет.ПолучитьОбласть("ОбластьЛегенда");
	
	// Для данных "Оперативного плана задач"
	ОбластьИсполнительДеньОПЗ = Макет.ПолучитьОбласть("ОбластьДанныеПотокА|ОбластьДеньКолонкаОперативногоПлана");
	ОбластьИсполнительДеньПустаяОПЗ = Макет.ПолучитьОбласть("ОбластьДанныеПотокА|ОбластьПустаяКолонкаОперативногоПлана");
	ОбластьРазделитель = Макет.ПолучитьОбласть("ОбластьРазделитель");
	
	ЛинияСплошная = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
	ЛинияСплошнаяПолужирная = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 3, Истина);
	ЛинияРедкийПунктир = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.РедкийПунктир, 1);
	
	ТабДок.Очистить();

	ТабДок.Вывести(ОбластьЗаголовок); 
	ТабДок.Вывести(ОбластьИсполнителиШапка);

	ТекДата = ДатаНачала;
	Объединения = Новый Массив;
	КолонкиВыходныхДней = Новый Массив;
	
	ЦветФонаБудни = WebЦвета.Белый;
	ЦветФонаВыходной = WebЦвета.Золотой;//ЦветаСтиля.ЦветРамки;
	
	НачПоз = 3;
	К = НачПоз;
	НомерКолонкиТекущаяДата = 0;
	ТекущийДень = НачалоДня(ТекущаяДата());
	
	// 1. Вывод шапки отчета: месяцы и даты
	
	Пока ТекДата <= ДатаОкончания Цикл
		
		ОбластьПериодШапка.Параметры.мЧисло = День(ТекДата);
		ОбластьПериодШапка.Параметры.мМесяц = формат(ТекДата, "ДФ=MMMM") + ", " + формат(ТекДата, "ДФ=yyyy");
		
		СледДата = ТекДата + 86400;
		Если Месяц(СледДата) <> Месяц(ТекДата) ИЛИ ТекДата = ДатаОкончания Тогда 
			Объединения.Добавить(К);
		КонецЕсли;

		ЭтоВыходнойДень = Общий.офЭтоВыходнойДень(ТекДата);
		
		Если ЭтоВыходнойДень Тогда 
			ОбластьПериодШапка.Область("R2C1").ЦветФона = ЦветФонаВыходной;
			КолонкиВыходныхДней.Добавить(К);
		Иначе
			ОбластьПериодШапка.Область("R2C1").ЦветФона = ЦветФонаБудни;
		КонецЕсли;
		
		Если ТекущийДень = ТекДата Тогда
			НомерКолонкиТекущаяДата = К;
		КонецЕсли;
		ТабДок.Присоединить(ОбластьПериодШапка);
		К = К + 1;
		ТекДата = СледДата;
	КонецЦикла;
	
	// 2. Объединение месяцев
	
	НачалоОбъединения = НачПоз;
	Для Каждого КонецОбъединения Из Объединения Цикл
		ТабДок.Область("R3C"+НачалоОбъединения+":R3C"+КонецОбъединения).Объединить();
		НачалоОбъединения = КонецОбъединения + 1;
	КонецЦикла;
	
	ТабДок.Вывести(ОбластьРазделитель); 
	
	// 3.1 Получение исполнителей
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Пользователи.Ссылка КАК Пользователь
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.ОтображатьВПланеВыполненияЗадач = ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	Пользователи.Наименование";
	
	Исполнители = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Пользователь");
	
	// 3.2 Получение ТЗ План выполнения задач
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПланВыполненияЗадач.Период,
	|	ПланВыполненияЗадач.Задача,
	|	ВЫБОР
	|		КОГДА ПланВыполненияЗадач.Задача ССЫЛКА Документ.Задача
	|			ТОГДА ПланВыполненияЗадач.Задача.Суть
	|		ИНАЧЕ ПланВыполненияЗадач.Задача
	|	КОНЕЦ КАК Суть,
	|	ПланВыполненияЗадач.Задача.Номер КАК НомерЗадачи,
	|	ПланВыполненияЗадач.ДатаНачалаПлан,
	|	ПланВыполненияЗадач.ДатаОкончанияПлан,
	|	ПланВыполненияЗадач.Исполнитель КАК Исполнитель,
	|	ПланВыполненияЗадач.Задача.СостояниеЗадачи КАК СостояниеЗадачи,
	|	ПланВыполненияЗадач.Задача.ИсполнительОтклик КАК ИсполнительОтклик
	|ИЗ
	|	РегистрСведений.ПланВыполненияЗадач КАК ПланВыполненияЗадач
	|ГДЕ
	|	(ПланВыполненияЗадач.ДатаНачалаПлан МЕЖДУ &ДатаНачала И &ДатаОкончания
	|			ИЛИ ПланВыполненияЗадач.ДатаОкончанияПлан МЕЖДУ &ДатаНачала И &ДатаОкончания
	|			ИЛИ &ДатаНачала МЕЖДУ ПланВыполненияЗадач.ДатаНачалаПлан И ПланВыполненияЗадач.ДатаОкончанияПлан
	|				И (&ДатаОкончания МЕЖДУ ПланВыполненияЗадач.ДатаНачалаПлан И ПланВыполненияЗадач.ДатаОкончанияПлан))
	|	И ПланВыполненияЗадач.Исполнитель В(&Исполнители)";
	
	Запрос.УстановитьПараметр("Исполнители", Исполнители);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ДатаНачала));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаОкончания));
	
	ТЗПланВыполненияЗадач = Запрос.Выполнить().Выгрузить();
	
	ТЗПланВыполненияЗадач.Колонки.Добавить("ОбрезанаДатаНачала");
	ТЗПланВыполненияЗадач.Колонки.Добавить("ОбрезанаДатаОкончания");
	
	ОбрезатьТЗПланВыполненияЗадачПоДатам(ТЗПланВыполненияЗадач);
	//РаспледелитьТЗПланВыполненияЗадачПоПотокам(ТЗПланВыполненияЗадач);
	
	Если ОтображатьЗадачиОперативногоПлана Тогда 
		//3.3 Получение данных оперативного плана задач
		
		ЗапросОперативныйПланЗадач = Новый Запрос;
		
		ЗапросОперативныйПланЗадач.Текст = 
		"ВЫБРАТЬ
		|	ОперативныйПланЗадач.Задача КАК Задача,
		|	ОперативныйПланЗадач.Порядок КАК Порядок,
		|	ОперативныйПланЗадач.Задача.Суть КАК Суть,
		|	ОперативныйПланЗадач.Задача.Исполнитель КАК Исполнитель,
		|	ОперативныйПланЗадач.Задача.СостояниеЗадачи КАК СостояниеЗадачи,
		|	ОперативныйПланЗадач.Задача.ИсполнительОтклик КАК ЗадачаИсполнительОтклик,
		|	НЕОПРЕДЕЛЕНО КАК Период
		|ПОМЕСТИТЬ ВТОперативныйПланЗадач
		|ИЗ
		|	РегистрСведений.ОперативныйПланЗадач КАК ОперативныйПланЗадач
		|ГДЕ
		|	ОперативныйПланЗадач.Задача.СостояниеЗадачи <> ЗНАЧЕНИЕ(Справочник.СостоянияЗадач.Закрыта)
		|	И НЕ ОперативныйПланЗадач.Задача В (&ЗадачиОперативногоПлана)
		|	И ОперативныйПланЗадач.Задача.Исполнитель В(&СписокПользователей)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТОперативныйПланЗадач.Задача,
		|	ВТОперативныйПланЗадач.Порядок,
		|	ВТОперативныйПланЗадач.Суть,
		|	ВТОперативныйПланЗадач.Задача.Номер КАК НомерЗадачи,
		|	ВТОперативныйПланЗадач.Исполнитель КАК Исполнитель,
		|	ВТОперативныйПланЗадач.СостояниеЗадачи,
		|	ВТОперативныйПланЗадач.ЗадачаИсполнительОтклик КАК ИсполнительОтклик,
		|	ВТОперативныйПланЗадач.Период
		|ИЗ
		|	ВТОперативныйПланЗадач КАК ВТОперативныйПланЗадач
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТОперативныйПланЗадач.Порядок
		|ИТОГИ ПО
		|	Исполнитель
		|АВТОУПОРЯДОЧИВАНИЕ";

		ЗапросОперативныйПланЗадач.УстановитьПараметр("ЗадачиОперативногоПлана", ТЗПланВыполненияЗадач.ВыгрузитьКолонку("Задача"));
		ЗапросОперативныйПланЗадач.УстановитьПараметр("СписокПользователей", Исполнители);
		ВыборкаОперативныйПланЗадач = ЗапросОперативныйПланЗадач.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	КонецЕсли;
	
	// 4. Вывод данных: 
	//		- Вывод всего периода по дням
	//		- Вывод данных "Плана выполнения задач"
	//		- Вывод данных "Оперативного плана задач"
	//		- 
	//		- 
	
	КолРазделителей = 1;
	Для Каждого ТекСтрокаИсполнитель Из Исполнители Цикл
		
		// Вывод всего периода по дням для тек. исполнителя
		
		ОбластьИсполнитель.Параметры.Исполнитель = ТекСтрокаИсполнитель;
		ТабДок.Вывести(ОбластьИсполнитель); 
		
		ТекДата = ДатаНачала;
		ИсполнительКод = СокрЛП(ТекСтрокаИсполнитель.Код);
		Пока ТекДата <= ДатаОкончания Цикл
			
			ОбластьИсполнительДень.Область("R1C1").Имя = ПолучитьИмяОбластиДня("ПотокА", ИсполнительКод, ТекДата);
			ЗаполнитьПустуюОбласть("ПустаяОбласть", Новый Структура("Период, Исполнитель", ТекДата, ТекСтрокаИсполнитель), ОбластьИсполнительДень.Область("R1C1"));
			
			ОбластьИсполнительДень.Область("R2C1").Имя = ПолучитьИмяОбластиДня("ПотокБ", ИсполнительКод, ТекДата);
			ЗаполнитьПустуюОбласть("ПустаяОбласть", Новый Структура("Период, Исполнитель", ТекДата, ТекСтрокаИсполнитель), ОбластьИсполнительДень.Область("R2C1"));
			
			
			ТабДок.Присоединить(ОбластьИсполнительДень);
			ТекДата = ТекДата + 86400;
		КонецЦикла;
		
		// Вывод данных "Плана выполнения задач"
		
		ОтборСтрок = Новый Структура;
		ОтборСтрок.Вставить("Исполнитель", ТекСтрокаИсполнитель);
		
		НайденныеСтроки = ТЗПланВыполненияЗадач.Скопировать(ОтборСтрок);
		НайденныеСтроки.Сортировать("ДатаНачалаПлан");
		
		//Общий.офВыполнитьКод("П1.Сортировать(""ДатаНачалаПлан"");", НайденныеСтроки);
		
		ИсполнительКод = СокрЛП(ТекСтрокаИсполнитель.Код);
		Для Каждого ТекПланЗадачи Из НайденныеСтроки Цикл
			
			ПереставитьВПотокБ = Ложь;
			Попытка
				ОбластьНачало = ТабДок.Область(ПолучитьИмяОбластиДня("ПотокА", ИсполнительКод, ТекПланЗадачи.ДатаНачалаПлан));
				мВерх = ОбластьНачало.Верх;
				мЛево = ОбластьНачало.Лево;
				
				Если ОбластьНачало.Расшифровка <> Неопределено И ОбластьНачало.Расшифровка.ИмяСтруктуры <> "ПустаяОбласть" Тогда 
					ПереставитьВПотокБ = Истина;
				КонецЕсли; 
				
				ОбластьОкончание = ТабДок.Область(ПолучитьИмяОбластиДня("ПотокА", ИсполнительКод, ТекПланЗадачи.ДатаОкончанияПлан));
				мНиз = ОбластьОкончание.Низ;
				мПраво = ОбластьОкончание.Право;
			Исключение
				ПереставитьВПотокБ = Истина;
			КонецПопытки;
			
			Если ПереставитьВПотокБ Тогда 
				Попытка
					ОбластьНачало = ТабДок.Область(ПолучитьИмяОбластиДня("ПотокБ", ИсполнительКод, ТекПланЗадачи.ДатаНачалаПлан));
					мВерх = ОбластьНачало.Верх;
					мЛево = ОбластьНачало.Лево;
					
					Если ОбластьНачало.Расшифровка <> Неопределено  И ОбластьНачало.Расшифровка.ИмяСтруктуры <> "ПустаяОбласть" Тогда 
						ВызватьИсключение "";
					КонецЕсли; 
					
					ОбластьОкончание = ТабДок.Область(ПолучитьИмяОбластиДня("ПотокБ", ИсполнительКод, ТекПланЗадачи.ДатаОкончанияПлан));
					мНиз = ОбластьОкончание.Низ;
					мПраво = ОбластьОкончание.Право;
				Исключение
					Сообщить("Не удалось разместить задачу: " + ТекПланЗадачи.Задача);
					Продолжить;
				КонецПопытки;
			КонецЕсли;
			
			ОбластьОбъединения = ТабДок.Область("R"+мВерх+"C"+мЛево+":R"+мНиз+"C"+мПраво);
	
			Если СкрыватьЦветЗадач Тогда 
				ЦветФона = WebЦвета.Белый;
				УзорЗаливки = Общий.обПолучитьУзорЗаливкиСостоянияЗадачи(ТекПланЗадачи.СостояниеЗадачи, ТекПланЗадачи.Исполнитель, ТекПланЗадачи.ИсполнительОтклик);
			Иначе 
				ЦветФона = Общий.обПолучитьЦветСостоянияЗадачи(ТекПланЗадачи.СостояниеЗадачи, ТекПланЗадачи.Исполнитель, ТекПланЗадачи.ИсполнительОтклик);
				УзорЗаливки = ТипУзораТабличногоДокумента.БезУзора;
			КонецЕсли;
			ЛинияГраницыЛевая = ?(ТекПланЗадачи.ОбрезанаДатаНачала = Истина, ЛинияРедкийПунктир, ЛинияСплошная);
			ЛинияГраницыПравая = ?(ТекПланЗадачи.ОбрезанаДатаОкончания = Истина, ЛинияРедкийПунктир, ЛинияСплошная);
			
			ЗаполнитьОбластьОбъединения("ЗадачаПланаВыполнения", ТекПланЗадачи, ОбластьОбъединения, ЛинияСплошная, ЛинияГраницыЛевая, ЛинияГраницыПравая, ЦветФона, УзорЗаливки);
			
			НоваяСтрока = НаборРасшифровок.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОбластьОбъединения.Расшифровка);
			
			НоваяСтрока.RowT = мВерх;
			НоваяСтрока.ColL = мЛево;
			НоваяСтрока.RowB = мНиз;
			НоваяСтрока.ColR = мПраво;
			
		КонецЦикла;
		
		Если ОтображатьЗадачиОперативногоПлана Тогда 
			// Вывод данных "Оперативного плана задач"
			СтуктураПоиска = Новый Структура("Исполнитель", ТекСтрокаИсполнитель);
			
			ВыборкаОперативныйПланЗадач.Сбросить();
			Пока ВыборкаОперативныйПланЗадач.НайтиСледующий(СтуктураПоиска) Цикл 
				ВыборкаОперативныйПланЗадачЗадачи = ВыборкаОперативныйПланЗадач.Выбрать();
				ТабДок.Присоединить(ОбластьИсполнительДеньПустаяОПЗ);
				Пока ВыборкаОперативныйПланЗадачЗадачи.Следующий() Цикл 
					
					ОбластьОбъединения = ОбластьИсполнительДеньОПЗ.Область("R1C1");
					
					Если СкрыватьЦветЗадач Тогда 
						ЦветФона = WebЦвета.Белый;
						УзорЗаливки = Общий.обПолучитьУзорЗаливкиСостоянияЗадачи(ТекПланЗадачи.СостояниеЗадачи, ТекПланЗадачи.Исполнитель, ТекПланЗадачи.ИсполнительОтклик);
					Иначе 
						ЦветФона = Общий.обПолучитьЦветСостоянияЗадачи(ВыборкаОперативныйПланЗадачЗадачи.СостояниеЗадачи, ВыборкаОперативныйПланЗадачЗадачи.Исполнитель, ВыборкаОперативныйПланЗадачЗадачи.ИсполнительОтклик);
						УзорЗаливки = ТипУзораТабличногоДокумента.БезУзора;
					КонецЕсли;
					
					ЗаполнитьОбластьОбъединения("ЗадачаОперативногоПлана", ВыборкаОперативныйПланЗадачЗадачи, ОбластьОбъединения, ЛинияСплошная, ЛинияСплошная, ЛинияСплошная, ЦветФона, УзорЗаливки);
					
					ТабДок.Присоединить(ОбластьИсполнительДеньОПЗ);
					ТабДок.Присоединить(ОбластьИсполнительДеньПустаяОПЗ);
					
				КонецЦикла;
			КонецЦикла;
        КонецЕсли;
		ТабДок.Вывести(ОбластьРазделитель); 
		КолРазделителей = КолРазделителей + 1;
	КонецЦикла;	
	
	// отобразим текущую дату
	
	Если НомерКолонкиТекущаяДата <> 0 Тогда
		мВерх = НачПоз+1;
		мВерх = НачПоз + 2;
		Для К = 1 По КолРазделителей-1 Цикл
			ТабДок.Область("R"+мВерх+"C"+НомерКолонкиТекущаяДата).ЦветФона = WebЦвета.ТемноБордовый;
			мВерх = мВерх + 3;
		КонецЦикла;
	КонецЕсли;
	
	Если СкрыватьВыходныеДни Тогда 
		Для Каждого НомерКолонки Из КолонкиВыходныхДней Цикл
			ТабДок.Область("R4C"+НомерКолонки+":R4C"+НомерКолонки).Очистить(Истина, Ложь, Ложь);
			ТабДок.Область("R4C"+(НомерКолонки+1)+":R4C"+(НомерКолонки+1)).ГраницаСлева = ЛинияСплошнаяПолужирная;
			ТабДок.Область("R4C"+НомерКолонки+":R4C"+НомерКолонки).ШиринаКолонки = 0;
		КонецЦикла;
	КонецЕсли; 
	
	// Выведем легенду
	
	Если СкрыватьЦветЗадач Тогда 
		//ОбластьЛегенда.Область("ОбластьЗаливка").ЦветУзора = WebЦвета.ТемноСерый;
		
		ОбластьЛегенда.Область("ОбластьЗаливка").Узор = Общий.обПолучитьУзорЗаливкиСостоянияЗадачи(Справочники.СостоянияЗадач.Назначена, Неопределено, Неопределено);
		ОбластьЛегенда.Параметры.СостояниеЗадачи = " - Назначена (Не выполнена)";
		//ТабДок.Вывести(ОбластьЛегенда);
		
		ОбластьЛегенда.Область("ОбластьЗаливка1").Узор = Общий.обПолучитьУзорЗаливкиСостоянияЗадачи(Справочники.СостоянияЗадач.Отработана, Неопределено, Неопределено);
		ОбластьЛегенда.Параметры.СостояниеЗадачи1 = " - Выполнена, ведется тестирование";
		ТабДок.Вывести(ОбластьЛегенда);
		
		ОбластьЛегенда.Область("ОбластьЗаливка").Узор = Общий.обПолучитьУзорЗаливкиСостоянияЗадачи(Справочники.СостоянияЗадач.ВРаботе, Неопределено, Неопределено);
		ОбластьЛегенда.Параметры.СостояниеЗадачи = " - В работе";
		//ТабДок.Вывести(ОбластьЛегенда);
		
		ОбластьЛегенда.Область("ОбластьЗаливка1").Узор = Общий.обПолучитьУзорЗаливкиСостоянияЗадачи(Справочники.СостоянияЗадач.Закрыта, Неопределено, Неопределено);
		ОбластьЛегенда.Параметры.СостояниеЗадачи1 = " - Выполнена";
		ТабДок.Вывести(ОбластьЛегенда);
		
		ОбластьЛегенда.Область("ОбластьЗаливка").Узор = Общий.обПолучитьУзорЗаливкиСостоянияЗадачи(Справочники.СостоянияЗадач.НуженОтклик, Неопределено, Неопределено);
		ОбластьЛегенда.Параметры.СостояниеЗадачи = " - На согласовании";
		//ТабДок.Вывести(ОбластьЛегенда);
		
		ЛинияГраницыНетЛинии = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии, 1);
		ОбластьЛегенда.Область("ОбластьЗаливка1").Узор = ТипУзораТабличногоДокумента.БезУзора;
		ОбластьЛегенда.Область("ОбластьЗаливка1").Обвести(ЛинияГраницыНетЛинии, ЛинияГраницыНетЛинии, ЛинияГраницыНетЛинии, ЛинияГраницыНетЛинии);
		ОбластьЛегенда.Параметры.СостояниеЗадачи1 = "";
		ТабДок.Вывести(ОбластьЛегенда);
	КонецЕсли;

	// прочие настройки
	
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ПолеСлева = 3;
	ТабДок.ПолеСправа = 3;
	ТабДок.ВерхнийКолонтитул.ТекстСлева = "Сформирован: " + Формат(ТекущаяДата(), "ДФ='dd.MM.yyyy    HH:mm'");
	ТабДок.ВерхнийКолонтитул.Выводить = Истина;

	СохранитьПеременныеВОбъект(исхОбъект);
	
КонецПроцедуры

Процедура СохранитьПеременныеВОбъект(исхОбъект)
	
	исхОбъект.НаборРасшифровок.Загрузить(НаборРасшифровок.Выгрузить());

КонецПроцедуры

