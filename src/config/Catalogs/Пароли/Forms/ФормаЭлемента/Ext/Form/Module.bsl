

#Область СобытияФормы
  
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПрочитатьНаборФайлов();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Для каждого Стр Из Объект.Данные Цикл
		Стр.ПарольБезШифрования = ПолучитьПарольДляСтрокиНаСервере(Объект.Данные.Индекс(стр));
	КонецЦикла;
	
	Элементы.ДанныеПарольБезШифрования.РежимПароля = Истина;
	ЭтаФорма.ТолькоПросмотр = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТаблицаПаролей = ТекущийОбъект.Данные;
	
	Для каждого Стр Из ТаблицаПаролей Цикл
		Стр.Пароль = МодульКриптографииСервер.ПолучитьЗашифрованныеДанные(Объект.Данные[ТаблицаПаролей.Индекс(стр)].ПарольБезШифрования, ПараметрыСеанса.МастерПароль);
		Если Не ЗначениеЗаполнено(Стр.ID) Тогда
			Стр.ID = Новый УникальныйИдентификатор();
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Для каждого Стр Из Объект.Данные Цикл
		Стр.ПарольБезШифрования = ПолучитьПарольДляСтрокиНаСервере(Объект.Данные.Индекс(стр));
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере (МассивПриложений, Скрытый)
	РегистрыСведений.Файлы.ЗаписатьФайлы(МассивПриложений, Объект.Ссылка, Скрытый);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Попытка
		УдалитьФайлы(КаталогВременныхФайлов()+"Auto.rdp");
	Исключение
	    //ОписаниеОшибки()
	КонецПопытки;

КонецПроцедуры

#КонецОбласти


&НаСервере
Функция ПолучитьПарольДляСтрокиНаСервере(Индекс)
	
	Об = РеквизитФормыВЗначение("Объект");
	Результат = МодульКриптографииСервер.ПолучитьРасшифрованныеДанные(Об.Данные[Индекс].Пароль, ПараметрыСеанса.МастерПароль);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ВклВыклРежимПароля(Команда)
	
	Элементы.ДанныеПарольБезШифрования.РежимПароля = Не Элементы.ДанныеПарольБезШифрования.РежимПароля;
	ЭтаФорма.ОбновитьОтображениеДанных();
	
	// Костыль. Работает. Не знаю почему
	ЭтаФорма.ТолькоПросмотр = Не ЭтаФорма.ТолькоПросмотр;
	ЭтаФорма.ТолькоПросмотр = Не ЭтаФорма.ТолькоПросмотр;
	
КонецПроцедуры

&НаКлиенте
Процедура ВклВыклРежимРедактирования(Команда)
	ЭтаФорма.ТолькоПросмотр = Не ЭтаФорма.ТолькоПросмотр;
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьЛогин(Команда)
	
	COMОбъект = Новый COMОбъект("htmlfile"); 
	COMОбъект.ParentWindow.ClipboardData.Setdata("Text", Элементы.Данные.ТекущиеДанные.Логин); 
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьПароль(Команда)
	
	COMОбъект = Новый COMОбъект("htmlfile"); 
	COMОбъект.ParentWindow.ClipboardData.Setdata("Text", Элементы.Данные.ТекущиеДанные.ПарольБезШифрования); 
	
КонецПроцедуры

&НаСервере
Функция ПолучитьАдресМакетаНаСервере(Макет)
	
	Результат = Неопределено;

	Об = РеквизитФормыВЗначение("Объект");
	Результат = ПоместитьВоВременноеХранилище(Об.ПолучитьМакет(Макет));
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ПодключитьсяПоRDP(Команда)
	
	СтруктураПодключения = Новый Структура("Адрес, Логин, Пароль"); 
	СтруктураПодключения.Адрес = Элементы.Данные.ТекущиеДанные.Путь;
	СтруктураПодключения.Логин = Элементы.Данные.ТекущиеДанные.Логин;
	СтруктураПодключения.Пароль = Элементы.Данные.ТекущиеДанные.ПарольБезШифрования;
	
	Temp = КаталогВременныхФайлов();
	
	gencrypt = ПолучитьИзВременногоХранилища(ПолучитьАдресМакетаНаСервере("gencrypt"));	
	gencrypt.Записать(Temp+"gencrypt.exe");
	
	СтруктураПодключения.Пароль = СтрЗаменить(СтруктураПодключения.Пароль,"%","%%"); // Экранируем
	СтруктураПодключения.Пароль = СтрЗаменить(СтруктураПодключения.Пароль,"&","^&"); // Экранируем
	
	ИсполняемаяСтрока = Temp+"gencrypt.exe /p:"+СтруктураПодключения.Пароль+" /hash >> "+Temp+"hash.txt";
	
	Бат = Новый ТекстовыйДокумент;
	Бат.ДобавитьСтроку(ИсполняемаяСтрока);
	Бат.Записать(Temp+"MakeHash.bat", "windows-1251");
	
	WshShell = Новый COMОбъект("WScript.Shell");
	WshShell.Run(Temp+"MakeHash.bat",0,1);
	
	Текст = Новый ТекстовыйДокумент;
	Текст.Прочитать(Temp+"hash.txt");
	ХэшПароля = Текст.ПолучитьСтроку(1);
	
	Попытка
		УдалитьФайлы(Temp+"gencrypt.exe");
		УдалитьФайлы(Temp+"MakeHash.bat");
		УдалитьФайлы(Temp+"hash.txt");
	Исключение
	    //ОписаниеОшибки()
	КонецПопытки;
	
	RDP = ПолучитьИзВременногоХранилища(ПолучитьАдресМакетаНаСервере("rdpConfig"));
	RDP.ДобавитьСтроку("full address:s:"+СтруктураПодключения.Адрес);
	RDP.ДобавитьСтроку("username:s:"+СтруктураПодключения.Логин);
	RDP.ДобавитьСтроку(ХэшПароля);
	RDP.Записать(Temp+"Auto.rdp");
	
	Попытка
		WshShell.Run(Temp+"Auto.rdp");
	Исключение
	    ЗапуститьПриложение(Temp+"Auto.rdp");
	КонецПопытки;
		
КонецПроцедуры

&НаКлиенте
Процедура ГенераторПаролей(Команда)
	ОткрытьФорму("Обработка.ГенераторПаролей.Форма.Форма");
КонецПроцедуры

#Область Вложения

&НаКлиенте
Процедура ПриложенияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина; // Аналог стандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		АдресВХранилище = "";
		ВыбранноеИмяФайла = "";
		Если ПоместитьФайл(АдресВХранилище, , ВыбранноеИмяФайла, Истина, ЭтаФорма.УникальныйИдентификатор) Тогда
			ЗаписатьПриложениеНаСервере(ВыбранноеИмяФайла, АдресВХранилище);
		КонецЕсли;
		ПрочитатьНаборФайлов();
	Иначе
		Предупреждение("Перед добавлением необходимо записать элемент.");
	КонецЕсли; 
		
КонецПроцедуры

&НаКлиенте
Процедура ПриложенияПослеУдаления(Элемент)
	
	ЗаписатьНаборФайлов();
	ПрочитатьНаборФайлов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриложенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	АдресВХранилище = "";
	ПрочитатьПриложениеНаСервере(ВыбраннаяСтрока,АдресВХранилище);
    ПолучитьФайл(АдресВХранилище,НаборЗаписей[ВыбраннаяСтрока].ИмяФайла,Истина);

КонецПроцедуры

&НаСервере
Процедура ПрочитатьНаборФайлов()
	
	Набор = РегистрыСведений.Файлы.СоздатьНаборЗаписей();
	
	Набор.Отбор.Документ.ВидСравнения = ВидСравнения.Равно;
	Набор.Отбор.Документ.Значение = Объект.Ссылка;
	Набор.Отбор.Документ.Использование = Истина;
	
	Набор.Отбор.Скрытый.ВидСравнения = ВидСравнения.Равно;
	Набор.Отбор.Скрытый.Значение = Ложь;
	Набор.Отбор.Скрытый.Использование = Истина;
	
	Набор.Прочитать(); 
	
	ЗначениеВДанныеФормы(Набор,НаборЗаписей);
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаборФайлов()
	
	Набор = РеквизитФормыВЗначение("НаборЗаписей");
	Набор.Записать();
	
КонецПроцедуры

&НаСервере
Функция ПрочитатьВсеПриложенияНаСервере(УИД)
		
	Струк = РегистрыСведений.Файлы.ПрочитатьФайлы(УИД, Объект.Ссылка);
	Возврат Струк
	
КонецФункции

&НаКлиенте
Процедура ПрочитатьВсеПриложения()
	
	КаталогФайлов = КаталогВременныхФайлов() + "МенеджерБТИ\";
	
	СоздатьКаталог(КаталогФайлов);
	
	ОбщаяСтруктура = ПрочитатьВсеПриложенияНаСервере(ЭтаФорма.УникальныйИдентификатор); 
	
	МасПрикрепленныеКартинки = ОбщаяСтруктура.ПрикрепленныеКартинки;
	Если МасПрикрепленныеКартинки.Количество() > 0 Тогда
		Для Каждого ТекСтрока Из МасПрикрепленныеКартинки Цикл
			ТекСтрока.Имя = КаталогФайлов + ТекСтрока.Имя;
		КонецЦикла;
		ПолучитьФайлы(МасПрикрепленныеКартинки,,,Ложь);
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ЗаписатьПриложениеНаСервере(ВыбранноеИмяФайла, АдресВХранилище)
	
	РегистрыСведений.Файлы.ЗаписатьФайл(ВыбранноеИмяФайла, Объект.Ссылка, АдресВХранилище);
	
КонецПроцедуры


&НаСервере
Процедура ПрочитатьПриложениеНаСервере(ВыбраннаяСтрока, Адрес)
	
	МЗ = РегистрыСведений.Файлы.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МЗ, НаборЗаписей[ВыбраннаяСтрока]);
	МЗ.Прочитать();
	
	Струк = Новый Структура("ИмяФайла, Документ", МЗ.ИмяФайла, Мз.Документ);
	
	Адрес = РегистрыСведений.Файлы.ПрочитатьФайл(Струк, ЭтаФорма.УникальныйИдентификатор); 
	
КонецПроцедуры


#КонецОбласти


