
&НаКлиенте
Процедура СписокПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	Если ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Перемещение  Тогда
		СтандартнаяОбработка = Ложь;
		  
		МассивЧтоПеретаскиваем = ПараметрыПеретаскивания.Значение;
		СсылкаКудаПеретаскиваем = Строка;
		
		Если МассивЧтоПеретаскиваем.Количество() > 0 Тогда
			ВыполнитьПеретаскиваниеНаСервере(МассивЧтоПеретаскиваем, СсылкаКудаПеретаскиваем);
			ОбновитьИнтерфейс();
		КонецЕсли; 
		
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ВыполнитьПеретаскиваниеНаСервере(МассивЧтоПеретаскиваем, СсылкаКудаПеретаскиваем)
	
	Если ТипЗнч(МассивЧтоПеретаскиваем[0]) = Тип("СправочникСсылка.МодулиСистемы") Тогда
		НовыйЭлемент = Справочники.Каталоги.СоздатьЭлемент();
		НовыйЭлемент.Наименование = МассивЧтоПеретаскиваем[0].Наименование;
		НовыйЭлемент.Родитель = СсылкаКудаПеретаскиваем;
		
		НовыйЭлемент.Записать();
		
		ОбМодульСистемы = МассивЧтоПеретаскиваем[0].ПолучитьОбъект();
		ОбМодульСистемы.КаталогПоУмолчанию = НовыйЭлемент.Ссылка;
		
		ОбМодульСистемы.Записать();

	Иначе
		Если МассивЧтоПеретаскиваем[0].Родитель = СсылкаКудаПеретаскиваем Тогда // Перетащили на самый верхний уровень
			
			РаспределитьПорядкиВГруппе(МассивЧтоПеретаскиваем[0].Родитель, МассивЧтоПеретаскиваем.Количество()+1);
			
			НовыйПорядок = 1;
			НачатьТранзакцию();
			Для каждого стрКаталог Из МассивЧтоПеретаскиваем Цикл
				
				ТекущийОбъектКаталог = стрКаталог.ПолучитьОбъект();
				ТекущийОбъектКаталог.Порядок = НовыйПорядок;
				ТекущийОбъектКаталог.Записать();
				НовыйПорядок = НовыйПорядок+1;
				
			КонецЦикла;
			ЗафиксироватьТранзакцию();		
			
			
			
			
		Иначе // Вниз или в середину
			НовыйПорядок = 1;
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	Каталоги.Порядок КАК Порядок
			|ИЗ
			|	Справочник.Каталоги КАК Каталоги
			|ГДЕ
			|	Каталоги.Родитель = &Родитель
			|
			|УПОРЯДОЧИТЬ ПО
			|	Порядок УБЫВ";
			
			//Получаем запросом МАКС порядок в группе
			Запрос.УстановитьПараметр("Родитель", МассивЧтоПеретаскиваем[0].Родитель);
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			Если ВыборкаДетальныеЗаписи.Следующий() Тогда
				
				Если СсылкаКудаПеретаскиваем.Порядок = ВыборкаДетальныеЗаписи.Порядок Тогда // Самый низ
					НовыйПорядок = ВыборкаДетальныеЗаписи.Порядок +1; 
				Иначе // Попытка поместить в середину списка
					РаспределитьПорядкиВГруппе(МассивЧтоПеретаскиваем[0].Родитель, МассивЧтоПеретаскиваем.Количество()+1);
					НовыйПорядок = СсылкаКудаПеретаскиваем.Порядок +1;
				КонецЕсли; 
				
				НачатьТранзакцию();
				Для каждого стрКаталог Из МассивЧтоПеретаскиваем Цикл
					
					ТекущийОбъектКаталог = стрКаталог.ПолучитьОбъект();
					ТекущийОбъектКаталог.Порядок = НовыйПорядок;
					ТекущийОбъектКаталог.Записать();
					
					НовыйПорядок = НовыйПорядок +1;
					
				КонецЦикла;
				ЗафиксироватьТранзакцию();
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура РаспределитьПорядкиВГруппе(ПараметрРодитель = Неопределено, Шаг = 1)
	Если ПараметрРодитель = Неопределено Тогда 
		// Распределяем корень
		ПараметрРодитель = Справочники.Каталоги.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Каталоги.Ссылка
		|ИЗ
		|	Справочник.Каталоги КАК Каталоги
		|ГДЕ
		|	Каталоги.Родитель = &Родитель";
	
	Запрос.УстановитьПараметр("Родитель", ПараметрРодитель);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	НовыйПорядок = Шаг;
	НачатьТранзакцию();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ТекущийОбъектКаталог = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		ТекущийОбъектКаталог.Порядок = НовыйПорядок;
		ТекущийОбъектКаталог.Записать();
		НовыйПорядок = НовыйПорядок + Шаг;	
		
	КонецЦикла;
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Элементы.Список.ТекущийРодитель = ВыбраннаяСтрока;	
КонецПроцедуры

 