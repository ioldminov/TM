
Процедура ПриОткрытии(ТабДок) Экспорт 
	
	Макет = ПолучитьМакет("Макет");
	
	Шапка = Макет.ПолучитьОбласть("ОбластьШапка");
	ТабДок.Вывести(Шапка);
	
КонецПроцедуры

Функция ПреобразоватьДату(Дата) Экспорт
	
	СтрДата = Дата;
	
	ДатаРез = Неопределено;
	
	Если ТипЗнч(СтрДата) = Тип("Дата") Тогда
		ДатаРез = СтрДата;
	ИначеЕсли  ТипЗнч(СтрДата) = Тип("Строка") Тогда
		Попытка
			мДата = СтрЗаменить(СтрДата,".",Символы.ПС);
			
			мЧисло	= Число(СтрПолучитьСтроку(мДата,1));
			мМесяц  = Число(СтрПолучитьСтроку(мДата,2));
			мГод	= Число(СтрПолучитьСтроку(мДата,3));
			
			ДатаРез = Дата(мГод,мМесяц,мЧисло);
		Исключение
			//ОписаниеОшибки()
		КонецПопытки;
	КонецЕсли;
	
	Возврат ДатаРез;
	
КонецФункции



Процедура ЗагрузитьДанные(ТабличныйДокумент) Экспорт 
	
	Если Ложь Тогда
		ТабДок = Новый ТабличныйДокумент;
	КонецЕсли;
	
	КоличествоЭлементов = ТабличныйДокумент.ВысотаТаблицы - ПерваяСтрокаДанныхТабличногоДокумента + 1;
	
	//ТекПорядок = Общий.офПолучитьПорядокНовойЗадачи();
	ШагПорядкаЗадач = Константы.ШагПорядкаЗадач.Получить();
	Для К = ПерваяСтрокаДанныхТабличногоДокумента По ТабличныйДокумент.ВысотаТаблицы Цикл
		//Состояние("Обработано " + к + " из " + ТабличныйДокумент.ВысотаТаблицы);
		
		тСуть = 			ТабличныйДокумент.Область("R"+Формат(К,"ЧГ=")+"C"+1).Текст;
		тИсполнитель = 		ТабличныйДокумент.Область("R"+Формат(К,"ЧГ=")+"C"+2).Текст;
		
		тОтветственный = 	ТабличныйДокумент.Область("R"+Формат(К,"ЧГ=")+"C"+3).Текст;
		тДатаПлан = 		ТабличныйДокумент.Область("R"+Формат(К,"ЧГ=")+"C"+4).Текст;
		тМодуль = 			ТабличныйДокумент.Область("R"+Формат(К,"ЧГ=")+"C"+5).Текст;
		тПодробности = 		ТабличныйДокумент.Область("R"+Формат(К,"ЧГ=")+"C"+6).Текст;
		тПриоритет = 		ТабличныйДокумент.Область("R"+Формат(К,"ЧГ=")+"C"+7).Текст;
		//тИсполнитель = 		ТабличныйДокумент.Область("R"+Формат(К,"ЧГ=")+"C"+2).Текст;
		//тИсполнитель = 		ТабличныйДокумент.Область("R"+Формат(К,"ЧГ=")+"C"+2).Текст;
		
		Описание = ТабличныйДокумент.Область("R"+Формат(К,"ЧГ=")+"C"+2).Текст;
		
		ОбъектЗадача = Документы.Задача.СоздатьДокумент();
		ОбъектЗадача.Дата = ТекущаяДата();
		ОбъектЗадача.УстановитьНовыйНомер();
		//ОбъектЗадача.Порядок = ТекПорядок;
		ОбъектЗадача.Автор = Автор;
		ОбъектЗадача.Исполнитель = Справочники.Пользователи.НайтиПоНаименованию(тИсполнитель, Ложь);
		ОбъектЗадача.Ответственный = Справочники.Пользователи.НайтиПоНаименованию(тОтветственный, Ложь);
		Попытка
			ОбъектЗадача.ПлановаяДатаИсполнения = ПреобразоватьДату(тДатаПлан);
		Исключение
		    //ОписаниеОшибки()
		КонецПопытки;
		
		ОбъектЗадача.Проект = Проект;
		ОбъектЗадача.СостояниеЗадачи = Состояние;
		ОбъектЗадача.Статус = Перечисления.СтатусЗадачи.Обычный;
		
		Если СтрДлина(тСуть) > 150 Тогда
			тПодробности = тПодробности + Символы.ПС + Символы.ПС + тСуть;
			тСуть = Лев(тСуть, 150);
		КонецЕсли;
  
		
		ОбъектЗадача.Суть = тСуть;
		//ОбъектЗадача.Описание = тПодробности;
		ОбъектЗадача.Модуль = Справочники.МодулиСистемы.НайтиПоНаименованию(тМодуль, Ложь);
		
		//мФорматированнаяСтрока = Новый ФорматированнаяСтрока(тПодробности);
		
		ФД_Подробности = Новый ФорматированныйДокумент;
		//ФД_Подробности.УстановитьФорматированнуюСтроку(мФорматированнаяСтрока);
		ФД_Подробности.Добавить(тПодробности);
		ОбъектЗадача.ХЗ_Подробности = Новый ХранилищеЗначения(ФД_Подробности);
		ОбъектЗадача.Подробности = ФД_Подробности.ПолучитьТекст();
		
		ОбъектЗадача.Статус = Перечисления.СтатусЗадачи[тПриоритет];
		
		Попытка
			ОбъектЗадача.Записать();
		Исключение
		    Сообщить(ОписаниеОшибки());
		КонецПопытки;
		
	КонецЦикла;
		
КонецПроцедуры

