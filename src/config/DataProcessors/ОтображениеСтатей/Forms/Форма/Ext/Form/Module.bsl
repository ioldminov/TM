
&НаКлиенте
Перем ТекущаяСтатья;

&НаСервере
Функция ПрочитатьВсеПриложенияНаСервере(Ссылка, УИД)
	
	ПрикрепленныеКартинки = Новый Массив;
	
	Если ЗначениеЗаполнено(Ссылка) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФайлыСтатей.Документ,
		|	ФайлыСтатей.ИмяФайла,
		|	ФайлыСтатей.Скрытый,
		|	ФайлыСтатей.Добавлен,
		|	ФайлыСтатей.Пользователь,
		|	ФайлыСтатей.Размер,
		|	ФайлыСтатей.ХЗ
		|ИЗ
		|	РегистрСведений.ФайлыСтатей КАК ФайлыСтатей
		|ГДЕ
		|	ФайлыСтатей.Документ = &Документ
		|	И ФайлыСтатей.Скрытый = ИСТИНА";
		
		Запрос.УстановитьПараметр("Документ", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			АдресВХранилище = ПоместитьВоВременноеХранилище(ВыборкаДетальныеЗаписи.ХЗ.Получить(), УИД);
			//КаталогВременныхФайлов() + "МенеджерБТИ\" + 
			ИмяФайла = ВыборкаДетальныеЗаписи.ИмяФайла;
			ПрикрепленныеКартинки.Добавить(Новый ОписаниеПередаваемогоФайла(ИмяФайла, АдресВХранилище)); 	
		КонецЦикла; 
	КонецЕсли; 	
	
	Возврат ПрикрепленныеКартинки;
	
КонецФункции

&НаСервере
Процедура ПрочитатьПриложение(ВыбраннаяСтрока, Адрес)
	
	НашОбъект = РеквизитФормыВЗначение("Объект");
	
	МЗ = РегистрыСведений.ФайлыСтатей.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МЗ, НаборФайлов[ВыбраннаяСтрока]);
	МЗ.Прочитать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ФайлыСтатей.Документ,
	|	ФайлыСтатей.ИмяФайла,
	|	ФайлыСтатей.Скрытый,
	|	ФайлыСтатей.Пользователь,
	|	ФайлыСтатей.Добавлен,
	|	ФайлыСтатей.Размер,
	|	ФайлыСтатей.ХЗ
	|ИЗ
	|	РегистрСведений.ФайлыСтатей КАК ФайлыСтатей
	|ГДЕ
	|	ФайлыСтатей.Документ = &Документ
	|	И ФайлыСтатей.ИмяФайла = &ИмяФайла";
	
	Запрос.УстановитьПараметр("Документ", Мз.Документ);
	Запрос.УстановитьПараметр("ИмяФайла", МЗ.ИмяФайла);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Адрес = ПоместитьВоВременноеХранилище(Выборка.ХЗ.Получить(), ЭтаФорма.УникальныйИдентификатор );
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПрочитатьДопы(Документ)
	
	Набор = РегистрыСведений.ФайлыСтатей.СоздатьНаборЗаписей();
	
	Набор.Отбор.Документ.ВидСравнения = ВидСравнения.Равно;
	Набор.Отбор.Документ.Значение = Документ;
	Набор.Отбор.Документ.Использование = Истина;
	
	Набор.Отбор.Скрытый.ВидСравнения = ВидСравнения.Равно;
	Набор.Отбор.Скрытый.Значение = Ложь;
	Набор.Отбор.Скрытый.Использование = Истина;
	
	Набор.Прочитать(); 
	
	ЗначениеВДанныеФормы(Набор, НаборФайлов);
	ДополнительныеФайлыЗаголовок = ""+Набор.Количество();

КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруТекущегоДокумента(ВыбраннаяСтрока)
	
	Если ВыбраннаяСтрока = Неопределено Тогда
		мДокумент =  Документы.Статья.ПустаяСсылка();
		мТекстHTML = "";
		мНазвание = "";
	Иначе
		МЗ = РегистрыСведений.ИсторияСтатей.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МЗ, ВыбраннаяСтрока);
		МЗ.Прочитать();
		
		мДокумент =  МЗ.Документ;
		мТекстHTML = МЗ.ТекстHTML;
		мНазвание =  МЗ.Наименование
	КонецЕсли;
	
	Струк = Новый Структура("Документ, Текст, Название", мДокумент, мТекстHTML, мНазвание);
	
	Возврат Струк;
	
КонецФункции


&НаКлиенте
Процедура ПолеHTMLДокументСформирован(Элемент)
	Элемент.Документ.body.scroll = "Yes";
	Если СтрДлина(ПараметрТекстHTML) > 0 Тогда
		Элемент.Документ.Body.innerHTML = ПараметрТекстHTML;
	КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ПолеHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	Если ДанныеСобытия.Href <> Неопределено  Тогда
		Сцылко = ДанныеСобытия.Href;
		СтандартнаяОбработка = Ложь;
		Если Лев(Сцылко, 6) = "about:" Тогда
			Сцылко = Сред(Сцылко,7);
		КонецЕсли; 
		Если ВРЕГ(Лев(Сцылко, 5)) = "E1CIB" Тогда // Это внутренняя ссылка
			ПерейтиПоНавигационнойСсылке(Сцылко);
		Иначе // внешняя
			Если ВРЕГ(Лев(Сцылко, 7)) = "HTTP://" Тогда
				//
			Иначе
				Сцылко = "http://" + Сцылко;
			КонецЕсли; 
			ПерейтиПоНавигационнойСсылке(Сцылко);
		КонецЕсли;	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КаталогиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	
	СтандартнаяОбработка = Ложь;
	Возврат;

	ПереченьСтатей.Отбор.Элементы.Очистить();
	
	ЭлементОтбора = ПереченьСтатей.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Каталог");
    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементОтбора.ПравоеЗначение = ВыбраннаяСтрока;
    ЭлементОтбора.Использование = Истина;
    Элементы.ПереченьСтатей.Обновить();	
	
КонецПроцедуры

&НаКлиенте
Процедура ПереченьСтатейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	
	СтандартнаяОбработка = Ложь;
	Возврат;
	СтруктураТекущегоДокумента = ПолучитьСтруктуруТекущегоДокумента(ВыбраннаяСтрока);
	
	// Прочитаем текст
	ПараметрТекстHTML = СтрЗаменить(СтруктураТекущегоДокумента.Текст, "%Temp%", КаталогВременныхФайлов() + "МенеджерБТИ\");
	
	// Подгрузим каринки
	МасПрикрепленныеКартинки = ПрочитатьВсеПриложенияНаСервере(СтруктураТекущегоДокумента.Документ, ЭтаФорма.УникальныйИдентификатор); 
	Если МасПрикрепленныеКартинки.Количество() > 0 Тогда
		ПолучитьФайлы(МасПрикрепленныеКартинки,,,Ложь);
	КонецЕсли;
	
	// Подгрузим Допы
	ПрочитатьДопы(СтруктураТекущегоДокумента.Документ);
	
	// Сменим страницу
	Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.Документ;
	Элементы.Страницы.ТекущаяСтраница = Элементы.Основная;
	
	Элементы.ПолеHTML.Документ.body.scroll = "Yes";
	Если СтрДлина(ПараметрТекстHTML) > 0 Тогда
		Элементы.ПолеHTML.Документ.Body.innerHTML = ПараметрТекстHTML;
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура НаборФайловВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	АдресВХранилище = "";
	
	НомерСтроки = Элемент.ТекущиеДанные.ИсходныйНомерСтроки - 1;
	
	ПрочитатьПриложение(НомерСтроки, АдресВХранилище);
    ПолучитьФайл(АдресВХранилище, НаборФайлов[НомерСтроки].ИмяФайла, Истина);

КонецПроцедуры


// События формы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//ПереченьСтатей.Параметры.УстановитьЗначениеПараметра("Период",  ТекущаяДата());
	
	ЭлементОтбора = ПереченьСтатей.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Каталог");
    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементОтбора.ПравоеЗначение = Справочники.Каталоги.ПустаяСсылка();
    ЭлементОтбора.Использование = Истина;
    Элементы.ПереченьСтатей.Обновить();	
	
КонецПроцедуры

&НаКлиенте
//Соловьев И.В. 23.03.2015
Процедура КаталогиПриАктивизацииСтроки(Элемент)
	
	ВыбраннаяСтрока = Элемент.ТекущаяСтрока;
	Если ВыбраннаяСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;

	ПереченьСтатей.Отбор.Элементы.Очистить();
	
	ЭлементОтбора = ПереченьСтатей.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Каталог");
    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементОтбора.ПравоеЗначение = ВыбраннаяСтрока;
    ЭлементОтбора.Использование = Истина;
    Элементы.ПереченьСтатей.Обновить();	
	
КонецПроцедуры

&НаКлиенте
Процедура ПереченьСтатейПриАктивизацииСтроки(Элемент)
	
	ВыбраннаяСтрока = Элемент.ТекущаяСтрока;
	//Если ВыбраннаяСтрока = Неопределено Тогда 
	//	Возврат;
	//КонецЕсли;
	СтруктураТекущегоДокумента = ПолучитьСтруктуруТекущегоДокумента(ВыбраннаяСтрока);
	
	КаталогФайлов = КаталогВременныхФайлов() + "МенеджерБТИ\";
	
	// Прочитаем текст
	ПараметрТекстHTML = СтрЗаменить(СтруктураТекущегоДокумента.Текст, "%Temp%", КаталогФайлов);
	
	// Подгрузим каринки
	МасПрикрепленныеКартинки = ПрочитатьВсеПриложенияНаСервере(СтруктураТекущегоДокумента.Документ, ЭтаФорма.УникальныйИдентификатор); 
	Если МасПрикрепленныеКартинки.Количество() > 0 Тогда
		Для Каждого ТекСтрока Из МасПрикрепленныеКартинки Цикл
			ТекСтрока.Имя = КаталогФайлов + ТекСтрока.Имя;
		КонецЦикла;
		ПолучитьФайлы(МасПрикрепленныеКартинки,,,Ложь);
	КонецЕсли;
	
	// Подгрузим Допы
	ПрочитатьДопы(СтруктураТекущегоДокумента.Документ);
	
	Элементы.ПолеHTML.Документ.body.scroll = "Yes";

	Элементы.ПолеHTML.Документ.Body.innerHTML = ПараметрТекстHTML;
	
	Объект.ТекущаяСтатья = СтруктураТекущегоДокумента.Документ;
	
	НазваниеСтатьи = "Статья: " + СтруктураТекущегоДокумента.Название;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСтатьюПоСсылке(Статья)
	
	мПараметры = Новый Структура("Ключ", Статья);
	ФормаСтатья = ПолучитьФорму("Документ.Статья.ФормаОбъекта", мПараметры);
	ФормаСтатья.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьСтатью(Команда)
	
	Если Объект.ТекущаяСтатья = Неопределено ИЛИ Не ЗначениеЗаполнено(Объект.ТекущаяСтатья) Тогда 
		Возврат;
	КонецЕсли;
	
	ОткрытьСтатьюПоСсылке(Объект.ТекущаяСтатья);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСтатью(Каталог)
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("Каталог", Каталог);
	
	ФормаСтатья = ПолучитьФорму("Документ.Статья.ФормаОбъекта", СтруктураПараметров);
	
	ФормаСтатья.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтатью(Команда)
	
	ВыбранныйКаталог = Элементы.Каталоги.ТекущаяСтрока;
	Если ВыбранныйКаталог = Неопределено ИЛИ Не ЗначениеЗаполнено(ВыбранныйКаталог) Тогда 
		Возврат;
	КонецЕсли;
	
	СоздатьСтатью(ВыбранныйКаталог);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанные(Команда)
	
	КаталогиПриАктивизацииСтроки(Элементы.Каталоги);
	
КонецПроцедуры


// Исполняемая часть модуля
СоздатьКаталог(КаталогВременныхФайлов() + "МенеджерБТИ\");
ТекущаяСтатья = Неопределено;
